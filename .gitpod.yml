image: marcopeg/gitpod-workspace-hasura:1.3.2

tasks:
  # Hasura Engine
  # =============
  - name: Hasura
    command: HELLO=world
      HASURA_GRAPHQL_ADMIN_SECRET="skillet"
      HASURA_GRAPHQL_JWT_SECRET="{\"type\":\"HS256\",\"key\":\"h2leOvdgjwpV0As5L8rZlV3VDVOsOmwk\"}"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE="anonymous"
      EVT_PROJECT_CACHE_UPDATE=http://localhost:4000/project/cache/update
      ACTION_BASE_URL=http://localhost:4000
      hasura_start
    openIn: right

  # Backend Process
  # ===============
  # it is used to perform triggered based transformations on the todos
  # after they are created.
  - name: Backend
    before: cd backend
    init: rm -rf ./.gitpod.lock && npm install && touch ./.gitpod.lock
    command: HELLO=world
      PORT=4000
      HASURA_ENDPOINT=$(gp url 8080)
      HASURA_JWT_SECRET="{\"type\":\"HS256\",\"key\":\"h2leOvdgjwpV0As5L8rZlV3VDVOsOmwk\"}"
      npm start
    openIn: right

  # Frontend Process
  # ================
  # it runs the CreateReactApp setup that consumes Hasura Engine's API.
  - name: Frontend
    before: cd app
    init: rm -rf ./.gitpod.lock && npm install && touch ./.gitpod.lock
    command: HELLO=world
      REACT_APP_HASURA_URL=$(gp url 8080)/v1/graphql
      DANGEROUSLY_DISABLE_HOST_CHECK=true
      npm start
    openIn: right

  # Styleguide Process
  # ================
  # it runs the CreateReactApp setup that consumes Hasura Engine's API.
  - name: Styleguide
    before: cd app
    init: echo "Awaiting NPM install..." && while ! find ./.gitpod.lock 2> /dev/null 1> /dev/null; do sleep 1; done
    command: npm run styleguide
    openIn: right

  # Unit Tests
  # ================
  # it runs the CreateReactApp setup that let you do TDD.
  - name: Unit Tests
    before: cd app
    init: echo "Awaiting NPM install..." && while ! find ./.gitpod.lock 2> /dev/null 1> /dev/null; do sleep 1; done
    command: npm test
    openIn: right

  # Hasura Migrations
  # =================
  # it pings Hasura Engine to make sure the instance is correctly running,
  # then it pings the backend to make sure it's all good as well.
  # then it runs SQL migrations, Hasura Engine schema, and seed data.
  - name: Migrations
    before: cd services/migrations
    command:
      bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8080/v1/version)" != "200" ]]; do sleep 5; done'
      && bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:4000/healthz)" != "200" ]]; do sleep 5; done'
      && hasura migrate apply
      && hasura metadata apply
      && hasura seeds apply
    openIn: bottom
    openMode: tab-after

ports:
  - port: 5432
    onOpen: ignore
  - port: 8080
    onOpen: ignore
  - port: 3000
    onOpen: open-preview
  - port: 6060
    onOpen: ignore
  - port: 4000
    onOpen: ignore
  - port: 8008
    onOpen: ignore

vscode:
  extensions:
    - dbaeumer.vscode-eslint@2.1.1:DO6k4GCpqhwZcKo+jY9xjQ==
    - esbenp.prettier-vscode@3.20.0:37/f4uBlE287wUjENFq1aA==
    - mikestead.dotenv@1.0.1:SSXjr5hZcbqSF7nMIhTNnA==
    - wayou.vscode-todo-highlight@1.0.4:8IqxuxCVol2WnScJc5xVzg==
    - EditorConfig.EditorConfig@0.14.4:EjFaoTaOf8wRmwR0LNY51A==
